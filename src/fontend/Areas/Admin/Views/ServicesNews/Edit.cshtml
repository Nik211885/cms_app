@{
    ViewData["Title"] = "Chỉnh sửa Dịch vụ Tin tức";
        Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

}


<div class="container-fluid">
    <div class="card">
        <div class="content container-fluid">
            <div class="contact-profile">
                <div class="row align-items-center">
                    <div class="col-md-4">
                        <h3 class="page-title">Chi tiết tin dịch vụ</h3>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="">Trang chủ</a></li>
                            <li class="breadcrumb-item active">Tin dịch vụ</li>
                        </ul>
                    </div>
                    <div class="col-md-8 float-end ms-auto">
                       
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row px-3 py-2" style="width: 100%;">
        <div class="col-xl-2 col-lg-12 col-md-12 col-sm-12 mt-12">
            <div class="row">
                <div class="">
                    <input style="width: 100%;" id="servicesNewTitle" class="border border-light-subtle rounded py-2 px-1" type="text" placeholder="Nhập tên dịch vụ">
                </div>
            </div>
            <div class="row my-3">
                <label class=""><b>Nhóm dịch vụ cha</b></label>
                <div class="search_select_box">
                    <select style="width: 100%;" class="selectpicker border border-light-subtle rounded" id="menuSelect" data-live-search="true">
                        <!-- Các mục sẽ được thêm ở đây -->
                    </select>
                </div>
            </div>
            <div class="row">
                <div class="">
                    <input style="width: 100%;" id="orderIndex" class="border border-light-subtle rounded py-2 px-1" type="text" placeholder="Nhập số thứ tự">
                </div>
            </div>
        </div>

        <div class="col-xl-10 col-lg-12 col-md-12 col-sm-12 mt-2">
            <ul class="nav nav-tabs d-flex align-items-center" id="myTab" role="tablist">
                <!-- Tabs sẽ được thêm ở đây -->
            </ul>

            <!-- Tab content -->
            <div class="tab-content mt-3" id="myTabContent">
                <!-- Nội dung sẽ được thêm ở đây -->
            </div>
        </div>
        <div class="col-xl-12">
            <div class="col-sm-12 ml-4 mb-2 mt-3 mb-3 d-flex">
                <div class="col-sm-2">
                    <label class="form-label"><b>Ngày tạo : </b></label>
                </div>
                <div>
                    <span class="fw-bold">28-11-2023</span>
                    
                </div>
            </div>
        </div>
          <div class="col-xl-12">
            <div class="col-sm-12 ml-4 mb-2 mt-3 mb-3 d-flex">
                <div class="col-sm-2">
                    <label class="form-label"><b>Người tạo : </b></label>
                </div>
                <div>
                    <span class="fw-bold">HoangLan</span>
                    
                </div>
            </div>
        </div>
         <div class="col-xl-12">
            <div class="col-sm-12 ml-4 mt-1 mb-3 d-flex">
                <div class="col-sm-2">
                    <label class="form-label"><b>Tình trạng: </b></label>
                </div>
                <div>

                    <select style="width: 350px;" name="trangThai" class="select floating select2-hidden-accessible" data-select2-id="select2-data-4-dijy" tabindex="-1" aria-hidden="true">
                            <option value="true">Xuất bản</option>
                            <option value="false">Ngừng xuất bản</option>
                        </select>           
                </div>
            </div>
        </div>
        <div class="col-xl-12">
            <div class="col-sm-12 ml-4 mt-1 mb-3 d-flex">
                <div class="col-sm-2">
                    <label class="form-label"><b>Tác vụ : </b></label>
                </div>
                <div>
                    <input class="form-check-input" type="checkbox" id="is_hightlight">
                    <label class="form-check-label" for="is_hightlight">
                        Nổi bật
                    </label>
                </div>
            </div>
        </div>
         <div class="d-flex justify-content-end">
            <button type="button" id="saveButton" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#confirmModal">
                <i class="far fa-save fa-sm"></i> Lưu
            </button>
        </div>
    </div>
</div>


<div style="z-index:100" class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmSaveLabel" aria-hidden="true">
    <div class="modal-dialog modal-md">
        <div class="modal-content" style="margin-top:-100px">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmSaveLabel">Xác nhận lưu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn lưu các thay đổi không?
            </div>
            <div class="modal-footer">
                <button type="button" id="cancelSaveButton" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" id="confirmSaveButton" class="btn btn-primary " data-bs-dismiss="modal">
                    Xác nhận 
                </button>
            </div>
        </div>
    </div>
</div>
<script src="~/js/jquery-3.7.1.min.js"></script>


@* <script>
$(document).ready(function () {
    function initializeSummernote(selector) {
        $(selector).summernote({
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ],
            height: 300,
            fontSizes: ['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '20', '24', '36'],
        });
    }
    // Lấy ID từ URL
    const urlSegments = window.location.pathname.split('/');
    const id = urlSegments[urlSegments.length - 1];

    // Tải dữ liệu cho mục cần chỉnh sửa
   const idl = "7"; // ID được sử dụng để fetch dữ liệu

    // Fetching service news based on ID
    fetch(`http://localhost:3001/serviceNews/${idl}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const newsData = data;

            // Fill form fields with fetched data
            $('#servicesNewTitle').val(newsData.title); // Service title
            $('#orderIndex').val(newsData.orderIndex); // Order index

            // Fetch parentId from newsData
            const parentId = newsData.parentid; 
            console.log("parentId: " + parentId);
            setupMenuSelect(parentId); // Setup menu select

            // Process content tabs
            const tabContainer = $('#myTab');
            const tabContentContainer = $('#myTabContent');
            tabContainer.empty();
            tabContentContainer.empty();

            if (Array.isArray(newsData.content)) {
                newsData.content.forEach((item, index) => {
                    const tabId = `tab${index + 1}`;
                    tabContainer.append(`
                        <li class="nav-item" role="presentation">
                            <button class="nav-link ${index === 0 ? 'active' : ''} text-dark fw-bold" id="${tabId}-tab" data-bs-toggle="tab" data-bs-target="#${tabId}" type="button" role="tab" aria-controls="${tabId}" aria-selected="${index === 0}">${item.title}</button>
                        </li>
                    `);

                    tabContentContainer.append(`
                        <div class="tab-pane fade ${index === 0 ? 'show active' : ''}" id="${tabId}" role="tabpanel" aria-labelledby="${tabId}-tab">
                            <div class="form-group">
                                <label class="form-label"><b>Nội dung</b> <span style="color:red">*</span></label>
                                <textarea class="form-control form-control-sm summernote" id="contentServices${index + 1}" name="content"></textarea>
                            </div>
                        </div>
                    `);

                    // Initialize Summernote for content fields
                    initializeSummernote(`#contentServices${index + 1}`);
                });

                // Now set the content for each Summernote
                newsData.content.forEach((item, index) => {
                    $(`#contentServices${index + 1}`).summernote('code', item.contentHTML); // Set the contentHTML for each summernote
                });
            }

            // Handling the save button click event
            document.getElementById('saveButton').addEventListener('click', () => {
                const updatedContent = newsData.content.map((item, index) => {
                    const htmlContent = $(`#contentServices${index + 1}`).summernote('code');
                    return {
                        ...item,
                        contentHTML: htmlContent // Corrected field name
                    };
                });

                // Prepare updated data
                const updatedData = {
                    title: $('#servicesNewTitle').val(),
                    orderIndex: $('#orderIndex').val(), // Use orderIndex
                    content: updatedContent,
                    parentid: newsData.parentid // Keep parentid unchanged
                };

                // Send updated data to the server
                fetch(`http://localhost:3001/serviceNews/update/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedData),
                })
                    .then(response => response.json())
                    .then(result => {
                        console.log('Cập nhật thành công:', result);
                        // Show a success message or close modal after successful save
                    })
                    .catch(error => console.error('Lỗi khi cập nhật:', error));
            });
        })
        .catch(error => console.error('Error:', error));

    // Load menu options
    fetch('http://localhost:3001/menu')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const selectElement = document.getElementById('menuSelect');
            addItemsToSelect(data, selectElement);
            $(selectElement).selectpicker('refresh'); // Khởi tạo lại selectpicker sau khi đã thêm các mục
        })
        .catch(error => {
            console.error('Có lỗi xảy ra:', error);
        });

    // Hàm để thêm tất cả các mục vào thẻ <select> sử dụng forEach
    function addItemsToSelect(menuData, selectElement) {
        menuData.forEach(item => {
            // Tạo một <option> cho mục hiện tại
            let option = document.createElement('option');
            option.id = item.id;
            option.value = item.name;
            option.text = item.name;
            selectElement.appendChild(option);

            // Nếu mục có menu con, duyệt qua và thêm vào
            if (item.menu_child && item.menu_child.length > 0) {
                addItemsToSelect(item.menu_child, selectElement);
            }
        });
    }

   
});
</script> *@
<script>
    $(document).ready(function () {
    const id = "1"; // ID được sử dụng để fetch dữ liệu

    // Fetching service news based on ID
    fetch(`http://localhost:3001/serviceNews/${id}`)
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const newsData = data;

            // Fill form fields with fetched data
            $('#servicesNewTitle').val(newsData.title); // Service title
            $('#orderIndex').val(newsData.orderIndex); // Order index

            // Fetch parentId from newsData
            const parentId = newsData.parentid; 
            console.log("parentId: " + parentId);
            setupMenuSelect(parentId); // Setup menu select

            // Process content tabs
            const tabContainer = $('#myTab');
            const tabContentContainer = $('#myTabContent');
            tabContainer.empty();
            tabContentContainer.empty();

            if (Array.isArray(newsData.content)) {
                newsData.content.forEach((item, index) => {
                    const tabId = `tab${index + 1}`;
                    tabContainer.append(`
                        <li class="nav-item" role="presentation">
                            <button class="nav-link ${index === 0 ? 'active' : ''} text-dark fw-bold" id="${tabId}-tab" data-bs-toggle="tab" data-bs-target="#${tabId}" type="button" role="tab" aria-controls="${tabId}" aria-selected="${index === 0}">${item.title}</button>
                        </li>
                    `);

                    tabContentContainer.append(`
                        <div class="tab-pane fade ${index === 0 ? 'show active' : ''}" id="${tabId}" role="tabpanel" aria-labelledby="${tabId}-tab">
                            <div class="form-group">
                                <label class="form-label"><b>Nội dung</b> <span style="color:red">*</span></label>
                                <textarea class="form-control form-control-sm summernote" id="contentServices${index + 1}" name="content"></textarea>
                            </div>
                        </div>
                    `);

                    // Initialize Summernote for content fields
                    initializeSummernote(`#contentServices${index + 1}`);
                });

                // Now set the content for each Summernote
                newsData.content.forEach((item, index) => {
                    $(`#contentServices${index + 1}`).summernote('code', item.contentHTML); // Set the contentHTML for each summernote
                });
            }

            // Handling the save button click event
            document.getElementById('saveButton').addEventListener('click', () => {
                const updatedContent = newsData.content.map((item, index) => {
                    const htmlContent = $(`#contentServices${index + 1}`).summernote('code');
                    return {
                        ...item,
                        contentHTML: htmlContent // Corrected field name
                    };
                });

                // Prepare updated data
                const updatedData = {
                    title: $('#servicesNewTitle').val(),
                    orderIndex: $('#orderIndex').val(), // Use orderIndex
                    content: updatedContent,
                    parentid: newsData.parentid // Keep parentid unchanged
                };

                // Send updated data to the server
                fetch(`http://localhost:3001/serviceNews/update/${id}`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(updatedData),
                })
                    .then(response => response.json())
                    .then(result => {
                        console.log('Cập nhật thành công:', result);
                        // Show a success message or close modal after successful save
                    })
                    .catch(error => console.error('Lỗi khi cập nhật:', error));
            });
        })
        .catch(error => console.error('Error:', error));

    // Load menu options
    fetch('http://localhost:3001/menu')
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            const selectElement = document.getElementById('menuSelect');
            addItemsToSelect(data, selectElement);
            $(selectElement).selectpicker('refresh'); // Khởi tạo lại selectpicker sau khi đã thêm các mục
        })
        .catch(error => {
            console.error('Có lỗi xảy ra:', error);
        });

    // Hàm để thêm tất cả các mục vào thẻ <select> sử dụng forEach
    function addItemsToSelect(menuData, selectElement) {
        menuData.forEach(item => {
            // Tạo một <option> cho mục hiện tại
            let option = document.createElement('option');
            option.id = item.id;
            option.value = item.name;
            option.text = item.name;
            selectElement.appendChild(option);

            // Nếu mục có menu con, duyệt qua và thêm vào
            if (item.menu_child && item.menu_child.length > 0) {
                addItemsToSelect(item.menu_child, selectElement);
            }
        });
    }

    // Hàm thiết lập menu select dựa trên parentId
    function setupMenuSelect(parentId) {
        // Logic để thiết lập menu select dựa trên parentId
        // Ví dụ: bạn có thể tìm kiếm trong danh sách menu đã fetch được để chọn option tương ứng
        const selectElement = document.getElementById('menuSelect');
        Array.from(selectElement.options).forEach(option => {
            if (option.id === parentId) {
                option.selected = true; // Chọn option nếu id trùng với parentId
            }
        });
    }

    function initializeSummernote(selector) {
        $(selector).summernote({
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['para', ['ul', 'ol', 'paragraph']],
                ['height', ['height']],
                ['insert', ['picture', 'link', 'video', 'table', 'hr']],
                ['view', ['fullscreen', 'codeview', 'help']]
            ],
            height: 300,
            fontSizes: ['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '20', '24', '36'],
        });
    }
});

</script>



