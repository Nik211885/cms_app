@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";

}

<style>
     .bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn) {
        width: 100%;
    }
</style>
<div class="content container-fluid">
    <div id="successMessage" class="bg-success px-2 rounded my-2 text-center text-white " style="display: none;">
    Gửi duyệt thành công
</div>
<div class="content container-fluid">
    <div id="saveSuccessMessage" class="bg-secondary px-2 rounded my-2 text-center text-white " style="display: none;">
    Lưu lại thành công
</div>
<div class="content container-fluid">
    <div class="card">
        <div class="content container-fluid">
            <div class="contact-profile">
                <div class="row align-items-center">
                       <div class="col-md-4">
                        <h3 class="page-title">Tạo bài viết</h3>
                        <ul class="breadcrumb">
                            <li class="breadcrumb-item"><a href="">Trang chủ</a></li>
                            <li class="breadcrumb-item active">Bài viết</li>
                        </ul>
                    </div>
                    <div class="col-md-8 float-end ms-auto">
                        <div class="d-flex title-head">
                            @* <a href="/admin/servicesnews/create" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addModal"><i class="la la-plus-circle"></i>  Thêm mới</a> *@
                            <button id="saveNews" type="submit" class=" btn   btn-sm bg-secondary text-white"><i class="far fa-save fa-sm"></i> Lưu</button>
                          <button  id="postNews" class="btn btn-primary btn-sm mx-2" ><i class="la la-plus-circle"></i>  Gửi duyệt</button>
                      

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <form id="form-add-post" method="post">
        <div class="card" style="margin-top: -8px;">
            <div class="content container-fluid">
                 <div class="row ms-auto float-end py-2">
                    <div class="">
                    <button href="/admin/servicesnews/create"  id="saveServicesNews" class=" btn   btn-sm bg-warning text-white" > <i class="fa-solid fa-floppy-disk"></i> Lưu bản nháp</button>
                    </div>

                </div>
                <div class="row">
                    
                    <input type="hidden" id="add-id" name="id"/>
                    <div class="col-sm-12 mb-3">
                      <label for="parent-select class=""><b>Nhóm bài viết</b> <span style="color:red">*</span></label>
                        <select id="parent-select" class="border border-light-subtle rounded py-2" style="width: 100%;">
                            <option value="">--Nhóm bài viết--</option>
                            <option value="">--Tuyển dụng--</option>
                            <option value="">--Mời thầu--</option>


                        </select>
                        <div class="error-message text-danger text-sm mt-1 " id="error-cer_code"></div>
                    </div>

                    <div class="col-sm-12 mb-3">
                        <label class="form-label"><b>Nhan đề </b><span style="color:red">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="las la-font"></i></span>
                            <input type="text" class="form-control form-control-sm" id="title" name="title" placeholder="Nhập nhan đề"  />
                        </div>
                        <div class="error-message text-danger text-sm mt-1" id="error-title"></div>
                    </div>
                  
                    <div class="col-sm-12 mb-3">
                        <label class="form-label"><b>Nguồn</b> <span style="color:red">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="las la-link"></i></span>
                            <input type="text" class="form-control form-control-sm" id="source" name="source" placeholder="Nhập nguồn" />
                        </div>
                    </div>



                    <div class="col-sm-12 mb-3">
                        <label class="form-label"><b>Ảnh mô tả</b> (Kích thước ảnh 260 x 153)<span style="color:red"> *</span></label>
                        <div class="input-group">
                            <input name="avatar" type="file" id="avatar" class="form-control form-control-sm"
                                   onchange="validate()" accept="image/*"  />
                        </div>
                        <div class="error-message text-danger text-sm mt-1" id="error-avatar"></div>
                    </div>

                    <div id="preview-image-container " class="form-group col-md-12 d-flex justify-content-center mt-4">
                        <img id="avatar-input" class="rounded-3 shadow" title="Nhấn để điều chỉnh và cắt ảnh"
                             style="object-fit: contain; width: 220px; height: 150px; cursor: pointer" src="/img/defautAvatar.jpg" />
                    </div>
                   
                    

                    <div class="col-sm-12 mb-3">
                        <div class="form-group">
                            <label class="form-label"><b>Mô tả ngắn</b> <span style="color:red">*</span></label>
                            <textarea class="form-control form-control-sm" id="describle_short" name="describle_short" ></textarea>
                        </div>
                        <div class="error-message text-danger text-sm mt-2" id="error-describle_short"></div>
                    </div>

                    <div class="col-sm-12 mb-3">
                        <div class="form-group">
							<label class="form-label"><b>Nội dung</b> <span style="color:red">*</span></label>
                            <textarea class="form-control form-control-sm" id="content" name="content" ></textarea>
                        </div>
                        <div class="error-message text-danger text-sm mt-2" id="error-content"></div>
                    </div>
                  

                    <div class="col-sm-12 ml-4 mt-1 mb-3 d-flex">
                        <div class="col-sm-2">
                            <label class="form-label"><b>Tác vụ : </b></label>
                        </div>
                        <div>
                            <input class="form-check-input" type="checkbox" id="is_hightlight">
                            <label class="form-check-label" for="is_hightlight">
                                Nổi bật
                            </label>
                        </div>
                    </div>
                </div>
                 </div>
           

            

            <div class="card-footer">
                <div class="d-flex justify-content-end mt-1 mb-1">
                </div>
            </div>
        </div>
    </form>
</div>


@section individualScripts {
    <script src="~/js/check-image.js"></script>
}
<script src="~/js/jquery-3.7.1.min.js"></script>
<script>


    $(document).ready(function () {


        fetch('http://localhost:3001/nhombaiviet')
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                const selectElement = document.getElementById('newsParentSelect');
                addItemsToSelect(data, selectElement);
                $(selectElement).selectpicker('refresh'); // Khởi tạo lại selectpicker sau khi đã thêm các mục
            })
            .catch(error => {
                console.error('Có lỗi xảy ra:', error);
            });

        // Hàm để thêm tất cả các mục vào thẻ <select> sử dụng forEach
            function addItemsToSelect(menuData, selectElement) {
            menuData.forEach(item => {
                // Tạo một <option> cho mục hiện tại
                let option = document.createElement('option');
                option.id=item.id;
                option.value = item.name;
                option.text = item.name;
                selectElement.appendChild(option);

                // Nếu mục có menu con, duyệt qua và thêm vào
                if (item.menu_child && item.menu_child.length > 0) {
                    addItemsToSelect(item.menu_child, selectElement);
                }
            });
        }


        $('#describle_short').summernote({
            toolbar: [
                ['style', ['bold', 'italic', 'underline', 'clear']],
                ['fontname', ['fontname']],
                ['fontsize', ['fontsize']],
                ['color', ['color']],
                ['height', ['height']],
            ],
            height: 100,
            fontSizes: ['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '20', '24', '36'],
        });

          $('#content').summernote({
      toolbar: [
          ['style', ['bold', 'italic', 'underline', 'clear']],
          ['fontname', ['fontname']],
          ['fontsize', ['fontsize']],
          ['color', ['color']],
          ['para', ['ul', 'ol', 'paragraph']],
          ['height', ['height']],
          ['insert', ['picture', 'link', 'video', 'table', 'hr']],
          ['view', ['fullscreen', 'codeview', 'help']]
      ],
      height: 300,
      fontSizes: ['8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '20', '24', '36'],
  });

$('#saveServicesNews').on('click', function (e) {
    e.preventDefault(); // Ngăn không cho form submit mặc định

    // Tạo đối tượng FormData để thu thập dữ liệu từ form
    var formData = new FormData($('#form-add-post')[0]);

    // Thêm dữ liệu từ các trường input khác
    formData.append('id', $('#add-id').val());
    formData.append('parent', $('#parent-select').val());
    formData.append('title', $('#title').val());
    formData.append('source', $('#source').val());
    formData.append('describle_short', $('#describle_short').val());
    formData.append('content', $('#content').val());

    // Xử lý checkbox
    var isHighlight = $('#is_hightlight').is(':checked') ? 1 : 0;
    formData.append('is_hightlight', isHighlight);

    // **Log dữ liệu trước khi gửi**
    console.log("Dữ liệu chuẩn bị gửi:");
    for (var pair of formData.entries()) {
        console.log(pair[0] + ': ' + pair[1]);
    }

    // Gửi dữ liệu qua jQuery AJAX
    $.ajax({
        url: '/admin/servicesnews/create', // Thay đổi đường dẫn đến backend của bạn
        type: 'POST',
        data: formData,
        processData: false, // Không xử lý dữ liệu
        contentType: false, // Không thiết lập loại nội dung mặc định
        success: function (response) {
            if (response.success) {
                alert('Lưu thành công');
                // Có thể chuyển hướng hoặc làm gì đó sau khi lưu thành công
            } else {
                alert('Đã xảy ra lỗi. Vui lòng kiểm tra lại.');
            }
        },
        error: function (xhr, status, error) {
            console.log(error);
            alert('Đã xảy ra lỗi. Vui lòng thử lại sau.');
        }
    });
});

  
    $('#postNews').click(function(event) {
        event.preventDefault(); // Ngăn chặn hành động mặc định của nút

        let isValid = true;

        // Xóa các thông báo lỗi trước đó
        $('.error-message').text('');

        // Lấy giá trị từ các trường
        let title = $('#title').val().trim();
        let avatar = $('#avatar').get(0).files[0];
        let describleShort = $('#describle_short').val().trim();
        let content = $('#content').val().trim();
        let newsParentSelect = $('#newsParentSelect').val();
        let significant = $('#is_hightlight').is(':checked'); // Lấy trạng thái của checkbox Nổi bật
        let orderIndex = $('#orderIndex').val().trim(); // Ví dụ cho orderIndex, có thể thay đổi theo yêu cầu
        let menuId = [0]; // Ví dụ cho menu_id, có thể thay đổi theo yêu cầu

        // Kiểm tra "Nhóm bài viết"
        if (!newsParentSelect) {
            $('#error-cer_code').text('Vui lòng chọn Nhóm bài viết.');
            isValid = false;
        }

        // Kiểm tra "Tiêu đề"
        if (!title) {
            $('#error-title').text('Vui lòng nhập tiêu đề.');
            isValid = false;
        }

        // Kiểm tra "Ảnh bìa"
        if (!avatar) {
            $('#error-avatar').text('Vui lòng tải lên ảnh bìa.');
            isValid = false;
        } else {
            // Kiểm tra định dạng file ảnh
            const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
            if ($.inArray(avatar.type, validImageTypes) === -1) {
                $('#error-avatar').text('Chỉ chấp nhận các định dạng ảnh JPG, PNG, GIF.');
                isValid = false;
            }
        }

        // Kiểm tra "Mô tả ngắn"
        if (!describleShort) {
            $('#error-describle_short').text('Vui lòng nhập mô tả ngắn.');
            isValid = false;
        }

        // Kiểm tra "Nội dung"
        if (!content) {
            $('#error-content').text('Vui lòng nhập nội dung.');
            isValid = false;
        }
         if (!orderIndex) {
            $('#error-orderIndex').text('Vui lòng nhập số thứ tự.');
            isValid = false;
        }

        // Nếu tất cả các trường đều hợp lệ, gửi dữ liệu JSON
        if (isValid) {
            // Chuẩn bị dữ liệu JSON
            let jsonData = {
                news_description: describleShort,
                image_description: title, // Thay đổi theo yêu cầu
                news_content: [
                    {
                        content_html: content,
                        contentTitle: title
                    }
                ],
                significant: significant,
                status: {
                    status: 0, // Thay đổi theo yêu cầu
                    message: "", // Thay đổi theo yêu cầu
                    create_by: 0 // Thay đổi theo yêu cầu
                },
                orderIndex: orderIndex,
                menu_id: menuId
            };
            const successMessage = $('#successMessage');
                successMessage.fadeIn(); // Hiện thông báo

                // Tự động ẩn thông báo sau 3 giây
                setTimeout(function() {
                    successMessage.fadeOut(); // Ẩn thông báo
                }, 3000);
            console.log(jsonData)
            // Gửi dữ liệu bằng AJAX
            @* $.ajax({
                url: '/your/api/endpoint', // Thay đổi với endpoint của bạn
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(jsonData),
                success: function(response) {
                    // Xử lý phản hồi thành công
                    console.log('Success:', response);
                    // Bạn có thể làm gì đó như thông báo người dùng, chuyển hướng, v.v.
                },
                error: function(xhr, status, error) {
                    // Xử lý lỗi
                    console.error('Error:', error);
                    // Bạn có thể thông báo lỗi cho người dùng
                }
            }); *@
        }
    });

   $('#saveNews').click(function(event) {
        event.preventDefault(); // Ngăn chặn hành động mặc định của nút

        let isValid = true;

        // Xóa các thông báo lỗi trước đó
        $('.error-message').text('');

        // Lấy giá trị từ các trường
        let title = $('#title').val().trim();
        let avatar = $('#avatar').get(0).files[0];
        let describleShort = $('#describle_short').val().trim();
        let content = $('#content').val().trim();
        let newsParentSelect = $('#newsParentSelect').val();
        let significant = $('#is_hightlight').is(':checked'); // Lấy trạng thái của checkbox Nổi bật
        let orderIndex = $('#orderIndex').val().trim(); // Ví dụ cho orderIndex, có thể thay đổi theo yêu cầu
        let menuId = [0]; // Ví dụ cho menu_id, có thể thay đổi theo yêu cầu

        // Kiểm tra "Nhóm bài viết"
        if (!newsParentSelect) {
            $('#error-cer_code').text('Vui lòng chọn Nhóm bài viết.');
            isValid = false;
        }

        // Kiểm tra "Tiêu đề"
        if (!title) {
            $('#error-title').text('Vui lòng nhập tiêu đề.');
            isValid = false;
        }

        // Kiểm tra "Ảnh bìa"
        if (!avatar) {
            $('#error-avatar').text('Vui lòng tải lên ảnh bìa.');
            isValid = false;
        } else {
            // Kiểm tra định dạng file ảnh
            const validImageTypes = ['image/jpeg', 'image/png', 'image/gif'];
            if ($.inArray(avatar.type, validImageTypes) === -1) {
                $('#error-avatar').text('Chỉ chấp nhận các định dạng ảnh JPG, PNG, GIF.');
                isValid = false;
            }
        }

        // Kiểm tra "Mô tả ngắn"
        if (!describleShort) {
            $('#error-describle_short').text('Vui lòng nhập mô tả ngắn.');
            isValid = false;
        }

        // Kiểm tra "Nội dung"
        if (!content) {
            $('#error-content').text('Vui lòng nhập nội dung.');
            isValid = false;
        }
         if (!orderIndex) {
            $('#error-orderIndex').text('Vui lòng nhập số thứ tự.');
            isValid = false;
        }

        // Nếu tất cả các trường đều hợp lệ, gửi dữ liệu JSON
        if (isValid) {
            // Chuẩn bị dữ liệu JSON
            let jsonData = {
                news_description: describleShort,
                image_description: title, // Thay đổi theo yêu cầu
                news_content: [
                    {
                        content_html: content,
                        contentTitle: title
                    }
                ],
                significant: significant,
                status: {
                    status: 0, // Thay đổi theo yêu cầu
                    message: "", // Thay đổi theo yêu cầu
                    create_by: 0 // Thay đổi theo yêu cầu
                },
                orderIndex: orderIndex,
                menu_id: menuId
            };
            const saveSuccessMessage = $('#saveSuccessMessage');
                saveSuccessMessage.fadeIn(); // Hiện thông báo

                // Tự động ẩn thông báo sau 3 giây
                setTimeout(function() {
                    saveSuccessMessage.fadeOut(); // Ẩn thông báo
                }, 3000);
            console.log(jsonData)
            // Gửi dữ liệu bằng AJAX
            @* $.ajax({
                url: '/your/api/endpoint', // Thay đổi với endpoint của bạn
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(jsonData),
                success: function(response) {
                    // Xử lý phản hồi thành công
                    console.log('Success:', response);
                    // Bạn có thể làm gì đó như thông báo người dùng, chuyển hướng, v.v.
                },
                error: function(xhr, status, error) {
                    // Xử lý lỗi
                    console.error('Error:', error);
                    // Bạn có thể thông báo lỗi cho người dùng
                }
            }); *@
        }
    });


        // Load certificate codes
        @* function loadCerCodes() {
            $.ajax({
                url: `${base_url_api}CmsGroup/get-items`,
                type: 'GET',
                success: function (response) {
                    if (response && response.success && Array.isArray(response.data)) {
                        var optionsHtml = '';
                        response.data.forEach(function (item) {
                            optionsHtml += '<option value="' + item.id + '">' + item.name + '</option>';
                        });
                        $('#add-cer_code').html(optionsHtml);
                        $(".chosen-select").trigger("chosen:updated");
                        console.log('Data loaded:', response.data);
                    } else {
                        console.log('No data received or data format is incorrect:', response);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching cer codes:', xhr.responseText);
                    alert('Có lỗi xảy ra khi lấy dữ liệu bài viết.');
                }
            });
        }
       
        var post_id = '';
        function searchAndInsert(title, groupIds) {
            $.ajax({
                url: `${base_url_api}CmsPost/search-post-by-title-time?title=${title}`,
                type: 'GET',
                success: function (response) {
                    if (response && response.success && Array.isArray(response.data)) {

                        var data = response.data;
                        if (data.length > 0) {
                            var id = data[0].id;
                            console.log('Found groupId: ' + id);
                            $.ajax({
                                url: `${base_url_api}CmsPost/Multi-insert`,
                                type: 'POST',
                                contentType: 'application/json',
                                dataType:"json",
                                data: JSON.stringify({
                                    postId: id,
                                    groupIds: groupIds
                                }),
                                success: function (cerUnitResponse) {
                                    if (cerUnitResponse.success) {
                                        Toast().ShowToastSuccess("Thêm thành công!");
                                        $('#addModal').modal('hide');
                                    } else {
                                        Toast().ShowToastError("Thêm thất bại");

                                    }
                                },
                                error: function (xhr, status, error) {
                                    console.error('Lỗi phản hồi:', xhr.responseText);
                                    alert('Đã có lỗi xảy ra khi thêm bài viết ' + xhr.responseText);
                                }
                            });
                        } else {
                            console.log('Không tìm thấy bài viết nào!');
                            return 0;
                        }
                    } else {
                        alert('Không tìm thấy!');
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error fetching cer codes:', xhr.responseText);
                    alert('Lỗi tìm bài viết : ' + status);
                }
            });
        }
        loadCerCodes();

        $("form").submit(function (event) {
            event.preventDefault();
            if (!validateForm()) {
                return; // If validation fails, stop the form submission
            }
            var fileInput = $('#avatar')[0].files[0];
            var formData = new FormData();
            formData.append('files', fileInput);
            let fileId = "";

            $.ajax({
                url: `http://ucvn.vn:5530/Services/Core/Fms_File/upload?refType=CMS_POST_AVATAR&folderCode=CMS_POST`,
                type: 'POST',
                data: formData,
                contentType: false,
                processData: false,
                success: function (response) {
                    fileId = response.data[0].fileId;

                    var data = {
                        title: $('#title').val(),
                        describle_short: $('#describle_short').val(),
                        avatar: response.data[0].baseUrl + response.data[0].path,
                        content: $('#content').val(),
                        source: $('#source').val(),
                        is_hightlight: $('#is_hightlight').is(':checked'),
                        is_active: $('#is_active').is(':checked'),
                        create_by: sessionStorage.getItem('fullname'),
                        update_by: "string",
                        acc_id: sessionStorage.getItem('acc_id'),
                        status: "CHO_DUYET",
                        is_active:true,
                        created_at: new Date().toISOString()
                    };

                    // Lưu bài báo
                    $.ajax({
                        url: `${base_url_api}CmsPost/insert-item`,
                        type: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(data),
                        success: function (post_response) {
                            if (post_response.success) {
                                var group_ids = $('#add-cer_code').val();
                                console.log(post_id);
                                if (group_ids && group_ids.length > 0) {
                                    searchAndInsert(data.title, group_ids);
                                } else {
                                    Toast().ShowToastSuccess("Thêm thành công!");
                                    $.ajax({
                                        url: `http://ucvn.vn:5530/Services/Core/Fms_File/update-ref-id?fileId=${fileId}&refId=${post_response.data.id}`,
                                        type: 'GET',
                                        contentType: 'application/json',
                                        data: JSON.stringify(data),
                                        success: function (response) {
                                        },
                                        error: function (xhr, status, error) {
                                        }
                                    });
                                }
                            } else {
                                alert('Đã có lỗi xảy ra: ' + response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            alert('Đã có lỗi xảy ra: ' + xhr.responseText);
                        }
                    });
                }
            });
        }); *@
    });
</script>
